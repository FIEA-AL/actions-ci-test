services:
  - docker:23-dind

stages:
  - code-analyzis
  - build

sonar-analysis:
  stage: code-analyzis
  image:
    name: sonarsource/sonar-scanner-cli
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - main

Build:
  stage: build
  image:
    name: docker:20-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
      # in our experience although you'd assume this would be sufficient, this did 
      # nothing to prevent connection errors without `DOCKER_TLS_CERTDIR` being set 
      # to an empty string, and I would call that beyond mildly infuriating.
      command: ["--tls=false"]

  before_script:
    - echo -n $HARBOR_PASSWORD | docker login -u $HARBOR_USERNAME --password-stdin $HARBOR_REGISTRY
  script:
    - docker pull $HARBOR_REGISTRY_IMAGE:latest || true
    - >
      docker build
      --pull
      --cache-from $HARBOR_REGISTRY_IMAGE:latest
      --tag $HARBOR_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $HARBOR_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker logout $HARBOR_REGISTRY
